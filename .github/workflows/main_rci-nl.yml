name: Build & deploy â€“ rciâ€‘nl

on:
  push:
    branches: [ main ]          # direct pushes / human-merged PRs

  workflow_dispatch:            # optional manual run

  # Run after auto-merge workflow creates a merge commit (its push is
  # suppressed from triggering other workflows because it uses GITHUB_TOKEN)
  workflow_run:
    workflows: ["Auto-merge pull requests into main"]
    types: [completed]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: { contents: read }

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }   # use 3.12 if 3.13 isnâ€™t on AppÂ Service yet

      - name: Package app
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          
          # Download static dependencies
          echo "ðŸ“¦ Downloading static dependencies..."
          mkdir -p static/vendor/jquery
          mkdir -p static/vendor/datatables
          mkdir -p static/vendor/jsoneditor
          
          # Download jQuery
          curl -o static/vendor/jquery/jquery-3.7.1.min.js https://code.jquery.com/jquery-3.7.1.min.js
          
          # Download DataTables
          curl -o static/vendor/datatables/jquery.dataTables.min.css https://cdn.datatables.net/1.13.5/css/jquery.dataTables.min.css
          curl -o static/vendor/datatables/jquery.dataTables.min.js https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js
          
          # Download JSON Editor
          curl -o static/vendor/jsoneditor/jsoneditor.min.css https://unpkg.com/jsoneditor@9.10.5/dist/jsoneditor.min.css
          curl -o static/vendor/jsoneditor/jsoneditor.min.js https://unpkg.com/jsoneditor@9.10.5/dist/jsoneditor.min.js
          
          # Verify downloads
          echo "âœ… Verifying static dependencies..."
          ls -la static/vendor/jquery/
          ls -la static/vendor/datatables/
          ls -la static/vendor/jsoneditor/
          
          zip -r release.zip . -x 'venv/**'

      - uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'     # true for push to main
    environment:
      name: Production
      url: ${{ steps.deploy.outputs.webapp-url }}

    steps:
      - uses: actions/download-artifact@v4
        with: { name: python-app }

      - run: unzip release.zip

      - uses: azure/webapps-deploy@v3
        id: deploy
        with:
          app-name: rci-nl
          slot-name: Production
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_31CFBDE35ADB4F0DAB28B50299238ACC }}
